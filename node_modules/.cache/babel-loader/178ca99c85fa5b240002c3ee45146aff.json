{"ast":null,"code":"var _jsxFileName = \"/home/jon/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport DeckList from \"../Components/DeckList\";\nimport Deck from \"../Components/Deck\";\nimport CreateDeck from \"../Components/CreateDeck\";\nimport NotFound from \"./NotFound\";\nimport { listDecks, listCards, deleteDeck } from \"../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Layout() {\n  _s();\n\n  const [decks, setDecks] = useState([]);\n  useEffect(() => {\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n\n    async function getDecks() {\n      try {\n        const response = await listDecks(signal);\n        setDecks(response);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    getDecks();\n    return () => abortController.abort();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: `/`,\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: `/decks/new`,\n            className: \"btn btn-secondary mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"oi oi-plus\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 71\n            }, this), \" Create Deck\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list-group\",\n            children: decks.map(deck => /*#__PURE__*/_jsxDEV(DeckListItem, {\n              deck: deck\n            }, deck.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 38\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/decks/new\",\n          children: /*#__PURE__*/_jsxDEV(CreateDeck, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/decks/:deckId\",\n          children: /*#__PURE__*/_jsxDEV(Deck, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          children: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Layout, \"f+alwG6Mds7XNzaPIkXWhs/xDB4=\");\n\n_c = Layout;\nexport default Layout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"sources":["/home/jon/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/index.js"],"names":["React","useEffect","useState","Switch","Route","Header","DeckList","Deck","CreateDeck","NotFound","listDecks","listCards","deleteDeck","Layout","decks","setDecks","abortController","AbortController","signal","getDecks","response","error","console","log","abort","map","deck","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,UAA/B,QAAiD,cAAjD;;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,eAAe,GAAG,IAAIC,eAAJ,EAAxB;AACA,UAAMC,MAAM,GAAGF,eAAe,CAACE,MAA/B;;AAEA,mBAAeC,QAAf,GAA0B;AACxB,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMV,SAAS,CAACQ,MAAD,CAAhC;AACAH,QAAAA,QAAQ,CAACK,QAAD,CAAR;AACD,OAHD,CAGE,OAAOC,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF;;AACDF,IAAAA,QAAQ;AAER,WAAO,MAAMH,eAAe,CAACQ,KAAhB,EAAb;AACC,GAfM,EAeJ,EAfI,CAAT;AAiBA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA,6BACE,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,KAAK,EAAE,IAAd;AAAoB,UAAA,IAAI,EAAG,GAA3B;AAAA,kCACE;AAAG,YAAA,IAAI,EAAG,YAAV;AAAuB,YAAA,SAAS,EAAC,wBAAjC;AAAA,oCAA0D;AAAM,cAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,oBAA1D;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,sBACKV,KAAK,CAACW,GAAN,CAAWC,IAAD,iBAAU,QAAC,YAAD;AAA4B,cAAA,IAAI,EAAEA;AAAlC,eAAmBA,IAAI,CAACC,EAAxB;AAAA;AAAA;AAAA;AAAA,oBAApB;AADL;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAE,YAAb;AAAA,iCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAPF,eAUE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAE,gBAAb;AAAA,iCACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAVF,eAaE,QAAC,KAAD;AAAA,iCACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAwBD;;GA5CQd,M;;KAAAA,M;AA8CT,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport DeckList from \"../Components/DeckList\";\nimport Deck from \"../Components/Deck\";\nimport CreateDeck from \"../Components/CreateDeck\";\nimport NotFound from \"./NotFound\";\nimport { listDecks, listCards, deleteDeck } from \"../utils/api\";\n\nfunction Layout() {\n  const [decks, setDecks] = useState([]);\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n\n    async function getDecks() {\n      try {\n        const response = await listDecks(signal);\n        setDecks(response);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getDecks();\n\n    return () => abortController.abort();\n    }, []);\n    \n  return (\n    <>\n      <Header />\n      <main className=\"container\">\n        <Switch>\n          <Route exact={true} path={`/`}>\n            <a href={`/decks/new`} className=\"btn btn-secondary mb-2\"><span className=\"oi oi-plus\"></span> Create Deck</a>\n            <div className=\"list-group\">\n                {decks.map((deck) => <DeckListItem key={deck.id} deck={deck} />)}\n            </div>\n          </Route>\n          <Route path={\"/decks/new\"}>\n            <CreateDeck />\n          </Route>\n          <Route path={\"/decks/:deckId\"}>\n            <Deck />\n          </Route>\n          <Route>\n            <NotFound />\n          </Route>\n        </Switch>\n      </main>\n    </>\n  );\n}\n\nexport default Layout;\n"]},"metadata":{},"sourceType":"module"}