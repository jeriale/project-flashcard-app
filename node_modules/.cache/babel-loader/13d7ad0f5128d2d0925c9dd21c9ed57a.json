{"ast":null,"code":"var _jsxFileName = \"/home/jon/qualified-challenges/Project_Flashcards_Qualified_1/src/Components/DeckList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport DeckListItem from \"../Components/DeckListItem\";\nimport Deck from \"../Components/Deck\";\nimport CreateDeck from \"../Components/CreateDeck\";\nimport NotFound from \"../Layout/NotFound\";\nimport { listDecks } from \"../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DeckList() {\n  _s();\n\n  const [decks, setDecks] = useState(null);\n  useEffect(() => {\n    async function getDecks() {\n      try {\n        const response = await listDecks();\n        setDecks(response);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    getDecks();\n  }, [decks]);\n\n  if (decks == null) {\n    return /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: `/`,\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: `/decks/new`,\n        className: \"btn btn-secondary mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"oi oi-plus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 67\n        }, this), \" Create Deck\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-group\",\n        children: decks.map(deck => /*#__PURE__*/_jsxDEV(DeckListItem, {\n          deck: deck\n        }, deck.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 34\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/decks/new\",\n      children: /*#__PURE__*/_jsxDEV(CreateDeck, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/decks/:deckId\",\n      children: /*#__PURE__*/_jsxDEV(Deck, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      children: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DeckList, \"72sY3x9qSNcQP89o7Wz2GJWKido=\");\n\n_c = DeckList;\nexport default DeckList;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckList\");","map":{"version":3,"sources":["/home/jon/qualified-challenges/Project_Flashcards_Qualified_1/src/Components/DeckList.js"],"names":["React","useEffect","useState","Route","Switch","DeckListItem","Deck","CreateDeck","NotFound","listDecks","DeckList","decks","setDecks","getDecks","response","error","console","log","map","deck","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,SAASC,SAAT,QAA0B,cAA1B;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,IAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeY,QAAf,GAA0B;AACxB,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAML,SAAS,EAAhC;AACAG,QAAAA,QAAQ,CAACE,QAAD,CAAR;AACD,OAHD,CAGE,OAAOC,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF;;AACDF,IAAAA,QAAQ;AACT,GAVQ,EAUN,CAACF,KAAD,CAVM,CAAT;;AAYA,MAAIA,KAAK,IAAI,IAAb,EAAmB;AACjB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE,QAAC,MAAD;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAE,IAAd;AAAoB,MAAA,IAAI,EAAG,GAA3B;AAAA,8BACE;AAAG,QAAA,IAAI,EAAG,YAAV;AAAuB,QAAA,SAAS,EAAC,wBAAjC;AAAA,gCAA0D;AAAM,UAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAA1D;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,kBACKA,KAAK,CAACO,GAAN,CAAWC,IAAD,iBAAU,QAAC,YAAD;AAA4B,UAAA,IAAI,EAAEA;AAAlC,WAAmBA,IAAI,CAACC,EAAxB;AAAA;AAAA;AAAA;AAAA,gBAApB;AADL;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAE,YAAb;AAAA,6BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPF,eAUE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAE,gBAAb;AAAA,6BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAVF,eAaE,QAAC,KAAD;AAAA,6BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GAtCQV,Q;;KAAAA,Q;AAwCT,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport DeckListItem from \"../Components/DeckListItem\";\nimport Deck from \"../Components/Deck\";\nimport CreateDeck from \"../Components/CreateDeck\";\nimport NotFound from \"../Layout/NotFound\";\nimport { listDecks } from \"../utils/api\";\n\nfunction DeckList() {\n  const [decks, setDecks] = useState(null);\n\n  useEffect(() => {\n    async function getDecks() {\n      try {\n        const response = await listDecks();\n        setDecks(response);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getDecks();\n  }, [decks]);\n\n  if (decks == null) {\n    return <strong>Loading...</strong>\n  }\n\n  return (\n    <Switch>\n      <Route exact={true} path={`/`}>\n        <a href={`/decks/new`} className=\"btn btn-secondary mb-2\"><span className=\"oi oi-plus\"></span> Create Deck</a>\n        <div className=\"list-group\">\n            {decks.map((deck) => <DeckListItem key={deck.id} deck={deck} />)}\n        </div>\n      </Route>\n      <Route path={\"/decks/new\"}>\n        <CreateDeck />\n      </Route>\n      <Route path={\"/decks/:deckId\"}>\n        <Deck />\n      </Route>\n      <Route>\n        <NotFound />\n      </Route>\n    </Switch>\n  );\n}\n\nexport default DeckList;"]},"metadata":{},"sourceType":"module"}