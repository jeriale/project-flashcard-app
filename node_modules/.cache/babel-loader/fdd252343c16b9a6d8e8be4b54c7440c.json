{"ast":null,"code":"var _jsxFileName = \"/home/jon/qualified-challenges/Project_Flashcards_Qualified_1/src/Components/DeckList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport DeckListItem from \"../Components/DeckListItem\";\nimport { listDecks } from \"../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction DeckList() {\n  _s();\n\n  const [decks, setDecks] = useState([]);\n  useEffect(() => {\n    async function getDecks() {\n      try {\n        const response = await listDecks();\n        setDecks(response);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    getDecks();\n  }, []);\n\n  if (decks.length > 0) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: `/decks/new`,\n        className: \"btn btn-secondary mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"oi oi-plus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 75\n        }, this), \" Create Deck\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-group\",\n        children: decks.map(deck => /*#__PURE__*/_jsxDEV(DeckListItem, {\n          deck: deck\n        }, deck.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 42\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  } else {\n    return null;\n  }\n}\n\n_s(DeckList, \"f+alwG6Mds7XNzaPIkXWhs/xDB4=\");\n\n_c = DeckList;\nexport default DeckList;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckList\");","map":{"version":3,"sources":["/home/jon/qualified-challenges/Project_Flashcards_Qualified_1/src/Components/DeckList.js"],"names":["React","useEffect","useState","DeckListItem","listDecks","DeckList","decks","setDecks","getDecks","response","error","console","log","length","map","deck","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,SAAT,QAA0B,cAA1B;;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeO,QAAf,GAA0B;AACxB,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAML,SAAS,EAAhC;AACAG,QAAAA,QAAQ,CAACE,QAAD,CAAR;AACD,OAHD,CAGE,OAAOC,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF;;AACDF,IAAAA,QAAQ;AACT,GAVM,EAUJ,EAVI,CAAT;;AAYA,MAAIF,KAAK,CAACO,MAAN,GAAe,CAAnB,EAAsB;AAClB,wBACI;AAAA,8BACI;AAAG,QAAA,IAAI,EAAG,YAAV;AAAuB,QAAA,SAAS,EAAC,wBAAjC;AAAA,gCAA0D;AAAM,UAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAA1D;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,kBACKP,KAAK,CAACQ,GAAN,CAAWC,IAAD,iBAAU,QAAC,YAAD;AAA4B,UAAA,IAAI,EAAEA;AAAlC,WAAmBA,IAAI,CAACC,EAAxB;AAAA;AAAA;AAAA;AAAA,gBAApB;AADL;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA,oBADJ;AAQH,GATD,MASO;AACH,WAAO,IAAP;AACH;AACJ;;GA3BQX,Q;;KAAAA,Q;AA6BT,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport DeckListItem from \"../Components/DeckListItem\";\nimport { listDecks } from \"../utils/api\";\n\nfunction DeckList() {\n    const [decks, setDecks] = useState([]);\n\n    useEffect(() => {\n        async function getDecks() {\n          try {\n            const response = await listDecks();\n            setDecks(response);\n          } catch (error) {\n            console.log(error);\n          }\n        }\n        getDecks();\n      }, []);\n\n    if (decks.length > 0) {\n        return (\n            <>\n                <a href={`/decks/new`} className=\"btn btn-secondary mb-2\"><span className=\"oi oi-plus\"></span> Create Deck</a>\n                <div className=\"list-group\">\n                    {decks.map((deck) => <DeckListItem key={deck.id} deck={deck} />)}\n                </div>\n            </>\n        );\n    } else {\n        return null;\n    }\n}\n\nexport default DeckList;"]},"metadata":{},"sourceType":"module"}