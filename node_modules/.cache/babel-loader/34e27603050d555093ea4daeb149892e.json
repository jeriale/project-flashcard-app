{"ast":null,"code":"var _jsxFileName = \"/home/jon/qualified-challenges/Project_Flashcards_Qualified_1/src/Components/DeckList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport DeckListItem from \"../Components/DeckListItem\";\nimport { listDecks } from \"../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction DeckList() {\n  _s();\n\n  const [decks, setDecks] = useState(null);\n  useEffect(() => {\n    async function getDecks() {\n      try {\n        const response = await listDecks();\n        setDecks(response);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    getDecks();\n  });\n\n  if (decks == null) {\n    return /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      href: `/decks/new`,\n      className: \"btn btn-secondary mb-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"oi oi-plus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 65\n      }, this), \" Create Deck\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-group\",\n      children: decks.map(deck => /*#__PURE__*/_jsxDEV(DeckListItem, {\n        deck: deck\n      }, deck.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 32\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(DeckList, \"72sY3x9qSNcQP89o7Wz2GJWKido=\");\n\n_c = DeckList;\nexport default DeckList;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckList\");","map":{"version":3,"sources":["/home/jon/qualified-challenges/Project_Flashcards_Qualified_1/src/Components/DeckList.js"],"names":["React","useEffect","useState","DeckListItem","listDecks","DeckList","decks","setDecks","getDecks","response","error","console","log","map","deck","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,SAAT,QAA0B,cAA1B;;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,IAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeO,QAAf,GAA0B;AACxB,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAML,SAAS,EAAhC;AACAG,QAAAA,QAAQ,CAACE,QAAD,CAAR;AACD,OAHD,CAGE,OAAOC,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF;;AACDF,IAAAA,QAAQ;AACT,GAVQ,CAAT;;AAYA,MAAIF,KAAK,IAAI,IAAb,EAAmB;AACjB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,4BACE;AAAG,MAAA,IAAI,EAAG,YAAV;AAAuB,MAAA,SAAS,EAAC,wBAAjC;AAAA,8BAA0D;AAAM,QAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,cAA1D;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBACKA,KAAK,CAACO,GAAN,CAAWC,IAAD,iBAAU,QAAC,YAAD;AAA4B,QAAA,IAAI,EAAEA;AAAlC,SAAmBA,IAAI,CAACC,EAAxB;AAAA;AAAA;AAAA;AAAA,cAApB;AADL;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAQD;;GA3BQV,Q;;KAAAA,Q;AA6BT,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport DeckListItem from \"../Components/DeckListItem\";\nimport { listDecks } from \"../utils/api\";\n\nfunction DeckList() {\n  const [decks, setDecks] = useState(null);\n\n  useEffect(() => {\n    async function getDecks() {\n      try {\n        const response = await listDecks();\n        setDecks(response);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getDecks();\n  });\n\n  if (decks == null) {\n    return <strong>Loading...</strong>\n  }\n\n  return (\n    <>\n      <a href={`/decks/new`} className=\"btn btn-secondary mb-2\"><span className=\"oi oi-plus\"></span> Create Deck</a>\n      <div className=\"list-group\">\n          {decks.map((deck) => <DeckListItem key={deck.id} deck={deck} />)}\n      </div>\n    </>\n  );\n}\n\nexport default DeckList;"]},"metadata":{},"sourceType":"module"}