{"ast":null,"code":"var _jsxFileName = \"/home/jon/qualified-challenges/Project_Flashcards_Qualified_1/src/Components/Deck.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Switch, Route, useParams, useRouteMatch } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Deck() {\n  _s();\n\n  const [deck, setDeck] = useState({});\n  const {\n    deckId\n  } = useParams();\n  const {\n    url\n  } = useRouteMatch();\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    async function getDeck() {\n      try {\n        const response = await fetch(`${process.env.REACT_APP_DECKS_URL}/${deckId}`, abortController.signal);\n        const data = await response.json();\n        setDeck(data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    getDeck();\n    return () => abortController.abort();\n  }, [deckId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: deck.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: deck.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: `${url}/study`,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Study Deck\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${url}/edit`,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Edit Deck\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${url}/cards/new`,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Create New Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${url}/cards/:cardId/edit`,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Edit Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Deck, \"VZZJ0OpU1BVNHbN0oRnvAboXPTw=\", false, function () {\n  return [useParams, useRouteMatch];\n});\n\n_c = Deck;\nexport default Deck;\n\nvar _c;\n\n$RefreshReg$(_c, \"Deck\");","map":{"version":3,"sources":["/home/jon/qualified-challenges/Project_Flashcards_Qualified_1/src/Components/Deck.js"],"names":["React","useEffect","useState","Switch","Route","useParams","useRouteMatch","Deck","deck","setDeck","deckId","url","abortController","AbortController","getDeck","response","fetch","process","env","REACT_APP_DECKS_URL","signal","data","json","error","console","log","abort","id","description"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,SAAxB,EAAmCC,aAAnC,QAAwD,kBAAxD;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACd,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAaL,SAAS,EAA5B;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAUL,aAAa,EAA7B;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,eAAe,GAAG,IAAIC,eAAJ,EAAxB;;AACA,mBAAeC,OAAf,GAAyB;AACvB,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAR,CAAYC,mBAAoB,IAAGT,MAAO,EAA9C,EAAiDE,eAAe,CAACQ,MAAjE,CAA5B;AACA,cAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAT,EAAnB;AACAb,QAAAA,OAAO,CAACY,IAAD,CAAP;AACD,OAJD,CAIE,OAAOE,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACF;;AACDT,IAAAA,OAAO;AAEP,WAAO,MAAMF,eAAe,CAACc,KAAhB,EAAb;AACD,GAdQ,EAcN,CAAChB,MAAD,CAdM,CAAT;AAgBA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAA,gBAAKF,IAAI,CAACmB;AAAV;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAInB,IAAI,CAACoB;AAAT;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAG,GAAEjB,GAAI,QAApB;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAG,GAAEA,GAAI,OAApB;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAG,GAAEA,GAAI,YAApB;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF,eAUE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAG,GAAEA,GAAI,qBAApB;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GAzCQJ,I;UAEYF,S,EACHC,a;;;KAHTC,I;AA2CT,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Switch, Route, useParams, useRouteMatch } from \"react-router-dom\";\n\nfunction Deck() {\n  const [deck, setDeck] = useState({});\n  const { deckId } = useParams();\n  const { url } = useRouteMatch();\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    async function getDeck() {\n      try {\n        const response = await fetch(`${process.env.REACT_APP_DECKS_URL}/${deckId}`, abortController.signal);\n        const data = await response.json();\n        setDeck(data);\n      } catch (error) {\n          console.log(error);\n      }\n    }\n    getDeck();\n\n    return () => abortController.abort();\n  }, [deckId])\n\n  return (\n    <div className=\"container\">\n      <h2>{deck.id}</h2>\n      <p>{deck.description}</p>\n      <Switch>\n        <Route path={`${url}/study`}>\n          <p>Study Deck</p>\n        </Route>\n        <Route path={`${url}/edit`}>\n          <p>Edit Deck</p>\n        </Route>\n        <Route path={`${url}/cards/new`}>\n          <p>Create New Card</p>\n        </Route>\n        <Route path={`${url}/cards/:cardId/edit`}>\n          <p>Edit Card</p>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default Deck;"]},"metadata":{},"sourceType":"module"}