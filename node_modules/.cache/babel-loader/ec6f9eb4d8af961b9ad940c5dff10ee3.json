{"ast":null,"code":"var _jsxFileName = \"/home/jon/qualified-challenges/Project_Flashcards_Qualified_1/src/Components/Study.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { readDeck } from \"../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Study() {\n  _s();\n\n  const {\n    deckId\n  } = useParams();\n  const history = useHistory();\n  const [deck, setDeck] = useState({});\n  useEffect(() => {\n    async function getDeck() {\n      try {\n        const response = await readDeck(deckId);\n        setDeck(response);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    getDeck();\n  }, [deckId]);\n  const initialCardData = {\n    validDeck: true,\n    isFlipped: false,\n    front: deck.cards[0].front,\n    back: deck.cards[0].back,\n    progress: 0\n  };\n  const [cardData, setCardData] = useState({ ...initialCardData\n  });\n  console.log(deck);\n\n  const handleNextCard = () => {\n    if (deck.cards.length === cardData.progress) {\n      if (window.confirm(\"Do you want to restart this deck?\")) {\n        setCardData({\n          validDeck: true,\n          isFlipped: false,\n          front: deck.cards[0].front,\n          back: deck.cards[0].back,\n          progress: 0\n        });\n      } else {\n        history.push(\"/\");\n      }\n    } else {\n      const nextCard = deck.cards.find((ignore, index) => index === cardData.progress);\n      setCardData({\n        validDeck: true,\n        isFlipped: false,\n        front: nextCard.front,\n        back: nextCard.back,\n        progress: cardData.progress + 1\n      });\n    }\n  };\n\n  const flipCurrentCard = () => {\n    setCardData({ ...cardData,\n      isFlipped: !cardData.isFlipped\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      \"aria-label\": \"breadcrumb\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"breadcrumb\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"oi oi-home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 57\n            }, this), \" Home\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `/decks/${deckId}`,\n            children: deck.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item text-secondary\",\n          children: \"Study\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Study: \", deck.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), !cardData.validDeck ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        role: \"alert\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"alert-heading\",\n          children: \"Not enough cards...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), \"There needs to be at least 3 cards in a deck in order to study. There are \", deck.cards.length, \" cards in this deck.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"oi oi-plus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 47\n        }, this), \" Add Cards\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card mb-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"p-3 mb-2 bg-dark text-white font-weight-bold\",\n        children: [\"Card \", cardData.progress + 1, \" of \", deck.cards.length + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), !cardData.isFlipped ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"mt-4 mb-5 display-5\",\n          children: cardData.front\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary mr-1\",\n          onClick: flipCurrentCard,\n          children: \"Flip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary disabled\",\n          onClick: handleNextCard,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"mt-4 mb-5 display-5\",\n          children: cardData.back\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary mr-1\",\n          onClick: flipCurrentCard,\n          children: \"Flip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: handleNextCard,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Study, \"NiBP6UyG/WphYp9HY2IaC9E/U44=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = Study;\nexport default Study;\n\nvar _c;\n\n$RefreshReg$(_c, \"Study\");","map":{"version":3,"sources":["/home/jon/qualified-challenges/Project_Flashcards_Qualified_1/src/Components/Study.js"],"names":["React","useState","useEffect","useParams","useHistory","readDeck","Study","deckId","history","deck","setDeck","getDeck","response","error","console","log","initialCardData","validDeck","isFlipped","front","cards","back","progress","cardData","setCardData","handleNextCard","length","window","confirm","push","nextCard","find","ignore","index","flipCurrentCard","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { readDeck } from \"../utils/api\";\n\nfunction Study() {\n\n  const { deckId } = useParams();\n  const history = useHistory();\n\n  const [deck, setDeck] = useState({});\n\n  useEffect(() => {\n    async function getDeck() {\n      try {\n        const response = await readDeck(deckId);\n        setDeck(response);\n      } catch (error) {\n          console.log(error);\n      }\n    }\n    getDeck();\n  }, [deckId]);\n\n  const initialCardData = {\n    validDeck: true,\n    isFlipped: false,\n    front: deck.cards[0].front,\n    back: deck.cards[0].back,\n    progress: 0\n  };\n\n  const [cardData, setCardData] = useState({ ...initialCardData });\n\n  console.log(deck);\n\n  const handleNextCard = () => {\n    if (deck.cards.length === cardData.progress) {\n      if (window.confirm(\"Do you want to restart this deck?\")) {\n        setCardData({\n          validDeck: true,\n          isFlipped: false,\n          front: deck.cards[0].front,\n          back: deck.cards[0].back,\n          progress: 0\n        });\n      } else {\n        history.push(\"/\");\n      }\n    } else {\n      const nextCard = deck.cards.find((ignore, index) => index === cardData.progress)\n      setCardData({\n        validDeck: true,\n        isFlipped: false,\n        front: nextCard.front,\n        back: nextCard.back,\n        progress: cardData.progress + 1\n      });\n    }\n  }\n\n  const flipCurrentCard = () => {\n    setCardData({\n      ...cardData,\n      isFlipped: !cardData.isFlipped\n    });\n  }\n\n  return (\n    <>\n      <nav aria-label=\"breadcrumb\">\n        <ol className=\"breadcrumb\">\n            <li className=\"breadcrumb-item\"><a href=\"/\"><span className=\"oi oi-home\"></span> Home</a></li>\n            <li className=\"breadcrumb-item\"><a href={`/decks/${deckId}`}>{deck.name}</a></li>\n            <li className=\"breadcrumb-item text-secondary\">Study</li>\n        </ol>\n      </nav>\n      <h2>Study: {deck.name}</h2>\n      {!cardData.validDeck ? (\n        <>\n          <div className=\"alert alert-danger\" role=\"alert\">\n            <h3 className=\"alert-heading\">Not enough cards...</h3>\n            There needs to be at least 3 cards in a deck in order to study. There are {deck.cards.length} cards in this deck.\n          </div>\n          <button className=\"btn btn-primary\"><span className=\"oi oi-plus\"></span> Add Cards</button>\n        </>\n      ) : (\n        <div className=\"card mb-2\">\n          <span className=\"p-3 mb-2 bg-dark text-white font-weight-bold\">Card {cardData.progress + 1} of {deck.cards.length + 1}</span>\n          {!cardData.isFlipped ? (\n            <div className=\"card-body text-center\">\n              <h4 className=\"mt-4 mb-5 display-5\">{cardData.front}</h4>\n              <button className=\"btn btn-secondary mr-1\" onClick={flipCurrentCard}>Flip</button>\n              <button className=\"btn btn-primary disabled\" onClick={handleNextCard}>Next</button>\n            </div>\n          ) : (\n            <div className=\"card-body text-center\">\n              <h4 className=\"mt-4 mb-5 display-5\">{cardData.back}</h4>\n              <button className=\"btn btn-secondary mr-1\" onClick={flipCurrentCard}>Flip</button>\n              <button className=\"btn btn-primary\" onClick={handleNextCard}>Next</button>\n            </div>\n          )}\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default Study;"]},"metadata":{},"sourceType":"module"}