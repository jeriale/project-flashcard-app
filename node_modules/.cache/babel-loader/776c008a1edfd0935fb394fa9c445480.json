{"ast":null,"code":"var _jsxFileName = \"/home/jon/qualified-challenges/Project_Flashcards_Qualified_1/src/Components/EditCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { updateCard, readCard } from \"../utils/api\";\nimport Form from \"./Form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction EditCard({\n  name\n}) {\n  _s();\n\n  const history = useHistory();\n  const {\n    deckId,\n    cardId\n  } = useParams();\n  const [card, setCard] = useState(null);\n  useEffect(() => {\n    async function getCard() {\n      try {\n        const response = await readCard(cardId);\n        setCard(response);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    getCard();\n  }, [cardId]);\n\n  const handleCardUpdate = formData => {\n    const updated = {\n      front: formData.front,\n      back: formData.back,\n      id: cardId,\n      deckId: parseInt(deckId)\n    };\n    updateCard(updated);\n    history.push(`/decks/${deckId}`);\n    window.location.reload(true);\n  };\n\n  if (card === null) {\n    return /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      \"aria-label\": \"breadcrumb\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"breadcrumb\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"oi oi-home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 65\n            }, this), \" Home\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `/decks/${deckId}`,\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item text-secondary\",\n          children: [\"Edit Card \", cardId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      data: card,\n      event: handleCardUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(EditCard, \"T29F4tYwp+qV+8cfjiGWMcSP+jQ=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = EditCard;\nexport default EditCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditCard\");","map":{"version":3,"sources":["/home/jon/qualified-challenges/Project_Flashcards_Qualified_1/src/Components/EditCard.js"],"names":["React","useEffect","useState","useHistory","useParams","updateCard","readCard","Form","EditCard","name","history","deckId","cardId","card","setCard","getCard","response","error","console","log","handleCardUpdate","formData","updated","front","back","id","parseInt","push","window","location","reload"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,kBAAtC;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,cAArC;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAA4B;AAAA;;AACxB,QAAMC,OAAO,GAAGP,UAAU,EAA1B;AACA,QAAM;AAAEQ,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAqBR,SAAS,EAApC;AAEA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,IAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAec,OAAf,GAAyB;AACrB,UAAI;AACA,cAAMC,QAAQ,GAAG,MAAMV,QAAQ,CAACM,MAAD,CAA/B;AACAE,QAAAA,OAAO,CAACE,QAAD,CAAP;AACH,OAHD,CAGE,OAAOC,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ;;AACDF,IAAAA,OAAO;AACV,GAVQ,EAUN,CAACH,MAAD,CAVM,CAAT;;AAYA,QAAMQ,gBAAgB,GAAIC,QAAD,IAAc;AACnC,UAAMC,OAAO,GAAG;AACZC,MAAAA,KAAK,EAAEF,QAAQ,CAACE,KADJ;AAEZC,MAAAA,IAAI,EAAEH,QAAQ,CAACG,IAFH;AAGZC,MAAAA,EAAE,EAAEb,MAHQ;AAIZD,MAAAA,MAAM,EAAEe,QAAQ,CAACf,MAAD;AAJJ,KAAhB;AAMAN,IAAAA,UAAU,CAACiB,OAAD,CAAV;AACAZ,IAAAA,OAAO,CAACiB,IAAR,CAAc,UAAShB,MAAO,EAA9B;AACAiB,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,IAAvB;AACH,GAVD;;AAYA,MAAIjB,IAAI,KAAK,IAAb,EAAmB;AACf,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBACI;AAAA,4BACI;AAAK,oBAAW,YAAhB;AAAA,6BACI;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,iBAAd;AAAA,iCAAgC;AAAG,YAAA,IAAI,EAAC,GAAR;AAAA,oCAAY;AAAM,cAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,oBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAhC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAI,UAAA,SAAS,EAAC,iBAAd;AAAA,iCAAgC;AAAG,YAAA,IAAI,EAAG,UAASF,MAAO,EAA1B;AAAA,sBAA8BF;AAA9B;AAAA;AAAA;AAAA;AAAA;AAAhC;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAI,UAAA,SAAS,EAAC,gCAAd;AAAA,mCAA0DG,MAA1D;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,eASI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEC,IAAZ;AAAkB,MAAA,KAAK,EAAEO;AAAzB;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA,kBADJ;AAaH;;GA/CQZ,Q;UACWL,U,EACWC,S;;;KAFtBI,Q;AAiDT,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { updateCard, readCard } from \"../utils/api\";\nimport Form from \"./Form\";\n\nfunction EditCard({ name }) {\n    const history = useHistory();\n    const { deckId, cardId } = useParams();\n\n    const [card, setCard] = useState(null);\n\n    useEffect(() => {\n        async function getCard() {\n            try {\n                const response = await readCard(cardId);\n                setCard(response);\n            } catch (error) {\n                console.log(error);\n            }\n        }\n        getCard();\n    }, [cardId]);\n\n    const handleCardUpdate = (formData) => {\n        const updated = {\n            front: formData.front,\n            back: formData.back,\n            id: cardId,\n            deckId: parseInt(deckId)\n        }\n        updateCard(updated);\n        history.push(`/decks/${deckId}`)\n        window.location.reload(true);\n    }\n\n    if (card === null) {\n        return <strong>Loading...</strong>\n    }\n\n    return (\n        <>\n            <nav aria-label=\"breadcrumb\">\n                <ol className=\"breadcrumb\">\n                    <li className=\"breadcrumb-item\"><a href=\"/\"><span className=\"oi oi-home\"></span> Home</a></li>\n                    <li className=\"breadcrumb-item\"><a href={`/decks/${deckId}`}>{name}</a></li>\n                    <li className=\"breadcrumb-item text-secondary\">Edit Card {cardId}</li>\n                </ol>\n            </nav>\n            <h2>Edit Card</h2>\n            <Form data={card} event={handleCardUpdate} />\n        </>\n    );\n}\n\nexport default EditCard;"]},"metadata":{},"sourceType":"module"}