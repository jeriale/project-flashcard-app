{"ast":null,"code":"var _jsxFileName = \"/home/jon/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Deck from \"../Components/Deck\";\nimport NotFound from \"./NotFound\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Layout() {\n  _s();\n\n  const [decks, setDecks] = useState([]);\n  console.log(decks); // useEffect(() => {\n  //   const abortController = new AbortController();\n  //   async function getDecks() {\n  //     try {\n  //       const response = await fetch(`${process.env.REACT_APP_DECKS_URL}`, abortController.signal);\n  //       const data = await response.json();\n  //       console.log(data);\n  //       setDecks(data);\n  //     } catch (error) {\n  //       console.log(error);\n  //     }\n  //   }\n  //   getDecks();\n  //   return () => abortController.abort();\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: `/`,\n          children: !!decks ? /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this) : decks.map(deck => /*#__PURE__*/_jsxDEV(Deck, { ...deck\n          }, deck.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 61\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Layout, \"MNuhsMChYs5vrIgmbiwlQ6kNPWI=\");\n\n_c = Layout;\nexport default Layout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"sources":["/home/jon/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/index.js"],"names":["React","useState","useEffect","Switch","Route","Header","Deck","NotFound","Layout","decks","setDecks","console","log","map","deck","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AAEAU,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAHgB,CAKhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE,QAAC,MAAD;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAG,GAAd;AAAA,oBACG,CAAC,CAACA,KAAF,gBAAW,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,kBAAX,GAA2BA,KAAK,CAACI,GAAN,CAAWC,IAAD,iBAAU,QAAC,IAAD,OAAwBA;AAAxB,aAAWA,IAAI,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA,kBAApB;AAD9B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAYD;;GAlCQP,M;;KAAAA,M;AAoCT,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Deck from \"../Components/Deck\";\nimport NotFound from \"./NotFound\";\n\nfunction Layout() {\n  const [decks, setDecks] = useState([]);\n\n  console.log(decks);\n\n  // useEffect(() => {\n  //   const abortController = new AbortController();\n  //   async function getDecks() {\n  //     try {\n  //       const response = await fetch(`${process.env.REACT_APP_DECKS_URL}`, abortController.signal);\n  //       const data = await response.json();\n  //       console.log(data);\n  //       setDecks(data);\n  //     } catch (error) {\n  //       console.log(error);\n  //     }\n  //   }\n  //   getDecks();\n\n  //   return () => abortController.abort();\n  // }, []);\n\n  return (\n    <>\n      <Header />\n      <div className=\"container\">\n        <Switch>\n          <Route path={`/`}>\n            {!!decks ? (<NotFound />) : decks.map((deck) => <Deck key={deck.id} {...deck} />)}\n          </Route>\n        </Switch>\n      </div>\n    </>\n  );\n}\n\nexport default Layout;\n"]},"metadata":{},"sourceType":"module"}